Intersect SLL
#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* next;
};
struct Node* newNode(int data) {
    struct Node* node = (struct Node*) malloc(sizeof(struct Node));
    node->data = data;
    node->next = NULL;
    return node;
}
struct Node* getIntersection(struct Node* head1, struct Node* head2) {
    int count1 = 0, count2 = 0;
    struct Node* curr1 = head1, *curr2 = head2;
    while (curr1) {
        count1++;
        curr1 = curr1->next;
    }
    while (curr2) {
        count2++;
        curr2 = curr2->next;
    }
    if (count1 > count2) {
        for (int i = 0; i < count1 - count2; i++) {
            head1 = head1->next;
        }
    } else {
        for (int i = 0; i < count2 - count1; i++) {
            head2 = head2->next;
        }
    }
    while (head1 && head2) {
        if (head1 == head2) {
            return head1;
        }
        head1 = head1->next;
        head2 = head2->next;
    }
    return NULL;
}
int main() {
    struct Node* head1 = NULL;
    struct Node* head2 = NULL;
    head1 = newNode(1);
    head1->next = newNode(2);
    head1->next->next = newNode(3);
    head1->next->next->next = newNode(4);
    head2 = newNode(5);
    head2->next = newNode(6);
    head2->next->next = newNode(7);
    head2->next->next->next = newNode(3);
    struct Node* intersection = getIntersection(head1, head2);
    if (intersection != NULL) {
        printf("The node of intersection is %d\n", intersection->data);
    } else {
        printf("The linked lists do not intersect.\n");
    }
    return 0;
}
