BST - kth min value
#include <stdio.h>
#include <stdlib.h>
typedef struct Node {
    int data;
    struct Node* left;
    struct Node* right;
} Node;
Node* createNode(int data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}
Node* insert(Node* root, int data) {
    if (root == NULL) {
        root = createNode(data);
    } else if (data < root->data) {
        root->left = insert(root->left, data);
    } else if (data > root->data) {
        root->right = insert(root->right, data);
    }
    return root;
}
int kthSmallest(Node* root, int k) {
    int count = 0;
    Node* curr = root;
    while (curr != NULL) {
        if (curr->left == NULL) {
            count++;
            if (count == k) {
                return curr->data;
            }
            curr = curr->right;
        } else {
            Node* pre = curr->left;
            while (pre->right != NULL && pre->right != curr) {
                pre = pre->right;
            }
            if (pre->right == NULL) {
                pre->right = curr;
                curr = curr->left;
            } else {
                pre->right = NULL;
                curr = curr->right;
            }
        }
    }
    return -1;
}
int main() {
    Node* root = NULL;
    root = insert(root, 50);
    insert(root, 30);
    insert(root, 20);
    insert(root, 40);
    insert(root, 70);
    insert(root, 60);
    insert(root, 80);
    int k = 3;
    int result = kthSmallest(root, k);
    if (result != -1) {
        printf("Kth smallest element is %d\n", result);
    } else {
        printf("There are less than k nodes in the BST\n");
    }
    return 0;
}
