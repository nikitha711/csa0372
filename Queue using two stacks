Queue using two stacks 
#include <stdio.h>
#include <stdlib.h>
#define N 100
int stack1[N], stack2[N];
int top_stack1 = -1;
int top_stack2 = -1;
void push_stack1(int data) {
    if (top_stack1 == N - 1) {
        printf("Stack1 is overflow\n");
        return;
    }
    top_stack1++;
    stack1[top_stack1] = data;
}
void push_stack2(int data) {
    if (top_stack2 == N - 1) {
        printf("Stack2 is overflow\n");
        return;
    }
    top_stack2++;
    stack2[top_stack2] = data;
}
int pop_stack1() {
    if (top_stack1 == -1) {
        printf("Stack1 is underflow\n");
        return -1;
    }
    return stack1[top_stack1--];
}
int pop_stack2() {
    if (top_stack2 == -1) {
        printf("Stack2 is underflow\n");
        return -1;
    }
    return stack2[top_stack2--];
}
void enqueue(int data) {
    push_stack1(data);
}
void dequeue() {
    if (top_stack1 == -1 && top_stack2 == -1) {
        printf("Queue is empty\n");
        return;
    }
    for (int i = 0; i < top_stack1; i++) {
        int temp = pop_stack1();
        push_stack2(temp);
    }
    int x = pop_stack2();
    printf("Dequeued element is %d\n", x);
}
int main() {
    int choice;
    while (1) {
        printf("1. Enqueue Operation\n");
        printf("2. Dequeue Operation\n");
        printf("3. Display the Queue\n");
        printf("4. Exit\n");
        printf("Enter your choice of operations: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                printf("Element to be inserted into the queue: ");
                int data;
                scanf("%d", &data);
                enqueue(data);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                printf("Queue: ");
                for (int i = 0; i <= top_stack1; i++) {
                    printf("%d ", stack1[i]);
                }
                printf("\n");
                break;
            case 4:
                exit(0);
            default:
                printf("Incorrect choice\n");
        }
    }
    return 0;
}
