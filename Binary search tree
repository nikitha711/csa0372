Binary search tree - search for an element, min element and Max element
#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node *left;
    struct Node *right;
};

struct Node *createNode(int value) {
    struct Node *newNode = (struct Node *)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->left = newNode->right = NULL;
    return newNode;
}

struct Node *insert(struct Node *root, int key) {
    
    if (root == NULL) return createNode(key);

    if (key < root->data)
        root->left = insert(root->left, key);
    else if (key > root->data)
        root->right = insert(root->right, key);

    return root;
}

struct Node *search(struct Node *root, int key) {
  
    if (root == NULL || root->data == key)
        return root;

    if (root->data < key)
        return search(root->right, key);

    return search(root->left, key);
}

struct Node *minValueNode(struct Node *node) {
    struct Node *current = node;

    while (current && current->left != NULL)
        current = current->left;

    return current;
}

struct Node *maxValueNode(struct Node *node) {
    struct Node *current = node;

    while (current && current->right != NULL)
        current = current->right;

    return current;
}

void inorder(struct Node *root) {
    if (root != NULL) {
        inorder(root->left);
        printf("%d ", root->data);
        inorder(root->right);
    }
}

int main() {
    struct Node *root = NULL;

    root = insert(root, 50);
    root = insert(root, 30);
    root = insert(root, 20);
    root = insert(root, 40);
    root = insert(root, 70);
    root = insert(root, 60);
    root = insert(root, 80);

    int keyToSearch = 40;
    struct Node *searchResult = search(root, keyToSearch);
    if (searchResult != NULL)
        printf("%d found in the BST.\n", keyToSearch);
    else
        printf("%d not found in the BST.\n", keyToSearch);

    struct Node *minNode = minValueNode(root);
    printf("Minimum element in BST: %d\n", minNode->data);

    struct Node *maxNode = maxValueNode(root);
    printf("Maximum element in BST: %d\n", maxNode->data);

    return 0;
}
